<?xml version="1.0"?>
<launch>
<!-- LAUNCH FILE FOR TWO ROBOTS MANIPULATE FABRIC -->

<arg name="is_remote" default="false"/>
<arg name="is_collision_handling_enabled_in_perturbed_simulations" default="true"/>

<group if="$(arg is_remote)">
    <machine name="burak-p1-20" address="192.168.1.200" env-loader="/home/burak/catkin_ws_deformable/src/deformable_manipulations_composite_layup/scripts/env_loader.sh" user="burak" password="1q2w3e"  default="true"/>
</group>

<arg name="control_rate" default="100"/>

<!-- Fabric Default parameter file location -->
<arg name="fabric_simulator_config"  default="$(find deformable_manipulations_composite_layup)/config/fabric_simulator.yaml"/>

<!-- Change below argument values to match with the yaml files -->
<arg name="fabric_state_topic_name"        default="fabric_state"/>
<arg name="fabric_markers_topic_name"      default="fabric_markers"/>
<arg name="rb_markers_topic_name"          default="rigid_body_markers"/>
<arg name="min_dist_to_rb_topic_name"      default="min_dist_to_rigid_bodies"/>
<arg name="min_dist_markers_topic_name"    default="min_dist_markers"/>

<arg name="custom_static_particles_odom_topic_prefix"     default="odom_particle_"/>
<arg name="custom_static_particles_cmd_vel_topic_prefix"  default="cmd_vel_particle_"/>

<arg name="fabric_node_console_logs" default="log"/>

<arg name="robot_2_id" default="0"/>
<arg name="robot_1_id" default="15"/>

<arg name="real_robot_mode_enabled" default="false"/>
<arg name="real_human_mode_enabled" default="false"/>

<!-- Set this to false if you would like to launch the controller seperately -->
<arg name="launch_controller" default="true" /> 

<!-- Load GLOBAL parameters into global namespace -->
<include file="$(find deformable_manipulations_composite_layup)/launch/load_parameters.launch">
    <arg name="namespace" value="" />
    <arg name="fabric_simulator_config" value="$(arg fabric_simulator_config)" />
</include>


<!-- REAL FABRIC Representative Simulation -->
<group>
    <arg name="simulation_name" value="fabric_simulator" />

    <!-- Load parameters into fabric_simulator's private namespace -->
    <include file="$(find deformable_manipulations_composite_layup)/launch/load_parameters.launch">
        <arg name="namespace" value="$(arg simulation_name)" />
        <arg name="fabric_simulator_config" value="$(arg fabric_simulator_config)" />
    </include>

    <!-- Simulation -->
    <node type="fabric_simulator_node" name="$(arg simulation_name)" pkg="fabric_simulator" output="$(arg fabric_node_console_logs)">
    <!-- <node type="fabric_simulator_node" name="$(arg simulation_name)" pkg="fabric_simulator" output="screen"> -->
        <rosparam param="fabric_visualization_mode"                 subst_value="true">4</rosparam>
        <rosparam param="fabric_markers_topic_name"                 subst_value="true">fabric_markers</rosparam>

        <rosparam param="point_marker_color_rgba"                   subst_value="true">[1.0, 0.5, 1.0, 0.7]</rosparam>
        <rosparam param="line_marker_color_rgba"                    subst_value="true">[0.0, 0.0, 0.0, 0.5]</rosparam>
        <rosparam param="mesh_marker_color_rgba"                    subst_value="true">[0.25, 0.5, 1.0, 1.0]</rosparam>

        <rosparam param="rb_visualization_mode"                     subst_value="true">2</rosparam>
        <rosparam param="rb_markers_topic_name"                     subst_value="true">rigid_body_markers</rosparam>
        <rosparam param="rb_line_marker_color_rgba"                 subst_value="true">[0.5, 1.0, 0.5, 0.025]</rosparam>        
        <rosparam param="min_dist_line_marker_color_rgba"           subst_value="true">[0.0, 0.0, 0.0, 1.0]</rosparam>

        <rosparam param="point_marker_scale"                        subst_value="true">0.015</rosparam>
        <rosparam param="line_marker_scale_multiplier"              subst_value="true">1.0</rosparam>
        <rosparam param="rb_line_marker_scale_multiplier"           subst_value="true">0.2</rosparam>
        <rosparam param="rb_mesh_marker_color_rgba"                 subst_value="true">[0.5, 1.0, 0.5, 0.5]</rosparam>
        <rosparam param="min_dist_line_marker_scale_multiplier"     subst_value="true">2.5</rosparam>
    </node>

</group>

<!-- Perturbation publisher for each follower particle -->
<node type="perturbation_publisher.py" name="perturbation_publisher" pkg="deformable_manipulations_composite_layup" output="screen">
    <rosparam param="pub_rate_odom"  subst_value="true">$(arg control_rate)</rosparam>

    <rosparam command="load" file="$(find deformable_manipulations_composite_layup)/config/perturbation_publisher.yaml" subst_value="true" />
</node>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- Perturbed XYZ simulations and distance publishers -->

<!-- Particle $(arg robot_1_id) -->
<include file="$(find deformable_manipulations_composite_layup)/launch/perturbed_simulations.launch">
    <arg name="particle_id"                               value="$(arg robot_1_id)"/>

    <arg name="fabric_simulator_config"                      value="$(arg fabric_simulator_config)" />

    <arg name="fabric_state_topic_name"                      value="$(arg fabric_state_topic_name)"/>
    <arg name="fabric_markers_topic_name"                    value="$(arg fabric_markers_topic_name)"/>
    <arg name="rb_markers_topic_name"                     value="$(arg rb_markers_topic_name)"/>
    <arg name="min_dist_to_rb_topic_name"                 value="$(arg min_dist_to_rb_topic_name)"/>
    <arg name="min_dist_markers_topic_name"               value="$(arg min_dist_markers_topic_name)"/>
    
    <arg name="custom_static_particles_odom_topic_prefix" value="$(arg custom_static_particles_odom_topic_prefix)"/>
    <arg name="custom_static_particles_cmd_vel_topic_prefix" value="$(arg custom_static_particles_cmd_vel_topic_prefix)"/>
    
    <arg name="fabric_node_console_logs"                     value="$(arg fabric_node_console_logs)" />
    <arg name="is_collision_handling_enabled"             value="$(arg is_collision_handling_enabled_in_perturbed_simulations)" />
</include>

<!-- Particle $(arg robot_2_id) -->
<include file="$(find deformable_manipulations_composite_layup)/launch/perturbed_simulations.launch">
    <arg name="particle_id"                               value="$(arg robot_2_id)"/>

    <arg name="fabric_simulator_config"                      value="$(arg fabric_simulator_config)" />

    <arg name="fabric_state_topic_name"                      value="$(arg fabric_state_topic_name)"/>
    <arg name="fabric_markers_topic_name"                    value="$(arg fabric_markers_topic_name)"/>
    <arg name="rb_markers_topic_name"                     value="$(arg rb_markers_topic_name)"/>
    <arg name="min_dist_to_rb_topic_name"                 value="$(arg min_dist_to_rb_topic_name)"/>
    <arg name="min_dist_markers_topic_name"               value="$(arg min_dist_markers_topic_name)"/>
    
    <arg name="custom_static_particles_odom_topic_prefix" value="$(arg custom_static_particles_odom_topic_prefix)"/>
    <arg name="custom_static_particles_cmd_vel_topic_prefix" value="$(arg custom_static_particles_cmd_vel_topic_prefix)"/>
    
    <arg name="fabric_node_console_logs"                     value="$(arg fabric_node_console_logs)" />
    <arg name="is_collision_handling_enabled"             value="$(arg is_collision_handling_enabled_in_perturbed_simulations)" />
</include>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- Obtain ODOM data from real robots instead of fake odom GUI -->

<!-- Particle $(arg robot_1_id) -->
<group if="$(arg real_robot_mode_enabled)">
    <arg name="particle_id" value="$(arg robot_1_id)" />
    <!-- Utility node to publish where the robot end-effector is at as a odom message -->
    <node type="tf_to_odom_node_advanced.py" name="tf_to_odom_node_$(arg particle_id)" pkg="topic_tf_transformers" output="screen">
        <rosparam param="odom_topic_name_out"   subst_value="True">/odom_particle_$(arg particle_id)</rosparam>
        <rosparam param="tf_a_frame_name"       subst_value="True">map</rosparam>
        <rosparam param="tf_b_frame_name"       subst_value="True">j2n6s300_left_end_effector</rosparam>
        <rosparam param="pub_rate"              subst_value="True">100.0</rosparam>
        <rosparam param="tf_b_to_c_pose"        subst_value="True">
            orientation:
                x: 0.0
                y: 0.7071068
                z: 0.7071068
                w: 0.0
            position:
                x: 0.0
                y: 0.0
                z: 0.0
        </rosparam>
        <rosparam param="twist_topic_name_in"    subst_value="True">/oarbot_silver/cmd_vel_world</rosparam>
    </node>
</group>

<!-- Particle $(arg robot_2_id) -->
<group if="$(arg real_robot_mode_enabled)">
    <arg name="particle_id" value="$(arg robot_2_id)" />
    <!-- Utility node to publish where the robot end-effector is at as a odom message -->
    <node type="tf_to_odom_node_advanced.py" name="tf_to_odom_node_$(arg particle_id)" pkg="topic_tf_transformers" output="screen">
        <rosparam param="odom_topic_name_out"   subst_value="True">/odom_particle_$(arg particle_id)</rosparam>
        <rosparam param="tf_a_frame_name"       subst_value="True">map</rosparam>
        <rosparam param="tf_b_frame_name"       subst_value="True">j2n6s300_right_end_effector</rosparam>
        <rosparam param="pub_rate"              subst_value="True">100.0</rosparam>
        <rosparam param="tf_b_to_c_pose"        subst_value="True">
            orientation:
                x: 0.7071068
                y: 0.0
                z: 0.0
                w: 0.7071068
            position:
                x: 0.0
                y: 0.0
                z: 0.0
        </rosparam>
        <rosparam param="twist_topic_name_in"    subst_value="True">/oarbot_blue/cmd_vel_world</rosparam>
    </node>
</group>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- Obtain ODOM data from real human body joint tracking instead of fake odom GUI -->

<!-- Right Hand (hand 1) -->
<group if="$(arg real_human_mode_enabled)">
    <arg name="hand_id" value="1" />
    <!-- Utility node to publish where the robot end-effector is at as a odom message -->
    <node type="tf_to_odom_node_advanced.py" name="tf_to_odom_node_hand_$(arg hand_id)" pkg="topic_tf_transformers" output="screen">
        <rosparam param="odom_topic_name_out"   subst_value="True">/odom_hand_$(arg hand_id)</rosparam>
        <rosparam param="tf_a_frame_name"       subst_value="True">map</rosparam>
        <rosparam param="tf_b_frame_name"       subst_value="True">body_joint_wrist_right</rosparam>
        <rosparam param="pub_rate"              subst_value="True">100.0</rosparam>
        <rosparam param="tf_b_to_c_pose"        subst_value="True">
            orientation:
                x: 0.0
                y: 0.0
                z: 0.0
                w: 1.0
            position:
                x: 0.0
                y: 0.0
                z: 0.0
        </rosparam>
        <!-- <rosparam param="twist_topic_name_in"    subst_value="True">/oarbot_silver/cmd_vel_world</rosparam> -->
    </node>
</group>

<!-- Left Hand (hand 2) -->
<group if="$(arg real_human_mode_enabled)">
    <arg name="hand_id" value="2" />
    <!-- Utility node to publish where the robot end-effector is at as a odom message -->
    <node type="tf_to_odom_node_advanced.py" name="tf_to_odom_node_$(arg hand_id)" pkg="topic_tf_transformers" output="screen">
        <rosparam param="odom_topic_name_out"   subst_value="True">/odom_hand_$(arg hand_id)</rosparam>
        <rosparam param="tf_a_frame_name"       subst_value="True">map</rosparam>
        <rosparam param="tf_b_frame_name"       subst_value="True">body_joint_wrist_left</rosparam>
        <rosparam param="pub_rate"              subst_value="True">100.0</rosparam>
        <rosparam param="tf_b_to_c_pose"        subst_value="True">
            orientation:
                x: 0.0
                y: 0.0
                z: 0.0
                w: 1.0
            position:
                x: 0.0
                y: 0.0
                z: 0.0
        </rosparam>
        <!-- <rosparam param="twist_topic_name_in"    subst_value="True">/oarbot_blue/cmd_vel_world</rosparam> -->
    </node>
</group>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<!-- CENTRALIZED CONTROLLER -->
<!-- <group if="$(arg launch_controller)">
    <include file="$(find deformable_manipulations_composite_layup)/launch/dlo_velocity_controller_3d_safe.launch">
        <arg name="controller_name"                     value="dlo_velocity_controller" />
        <arg name="fabric_state_topic_name"               value="/$(arg fabric_state_topic_name)" />
        <arg name="aux_enabled"                         value="False"/>
        <arg name="aux_bias_direction"                  value=""/>
    </include>
</group> -->

</launch>