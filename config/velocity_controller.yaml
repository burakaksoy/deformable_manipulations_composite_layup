## ----------------------------------------------------------------------------------------
nominal_control_enabled: True # default:True
obstacle_avoidance_enabled: True # default:True 
stress_avoidance_enabled: True # default:True 

# if the control output is invalid for this time, the controller stops.
# If set to less than or equal to zero, the controller does not stop.
# valid_control_output_wait_timeout: 5.0 # (seconds) 
valid_control_output_wait_timeout: 0.0 # (seconds) (To disable the timeout, set to less than or equal to zero)
## ----------------------------------------------------------------------------------------

## ----------------------------------------------------------------------------------------
real_robot_mode_enabled: False # default: False # If True, the real robot is used, publish the commands to the real robot as geometry_msgs/Twist messages

# The topic names to publish the twist messages for the real robots
# The order is important, the first robot is assumed to control the first custom static particle id in the fabric simulation, The second robot is assumed to control the second custom static particle id in the fabric simulation etc.
# The number of robot_command_topic_names should be equal to the number of custom static particles in the fabric simulation, otherwise it will raise an error.
# If the real_robot_mode_enabled is False, the robot_command_topic_names are ignored.
robot_command_topic_names:
  - "/oarbot_silver/cmd_vel_world"
  - "/oarbot_blue/cmd_vel_world"
## ----------------------------------------------------------------------------------------

# The topic names to subscribe the odometry messages for the followed frames (e.g. human hands)
# The first one is initialized as the leader, the rest are currently not being used.
followed_odom_topic_names:
  - "/odom_hand_1"
  - "/odom_hand_2"

## ----------------------------------------------------------------------------------------
## Nominal Velocity controller parameters

# Nominal Controller Gains [x,y,z]
kp: [10.0,10.0,10.0]
# kp: [1.0,1.0,1.0]
# kp: [0.5,0.5,0.5]
# kp: [0.06,0.06,0.03]
# kp: [0.05,0.05,0.025]
# kp: [0.03,0.03,0.03]
# kp: [0.02,0.02,0.02]

kd: [0.0,0.0,0.0]
## ----------------------------------------------------------------------------------------

## ----------------------------------------------------------------------------------------
## Logging parameters
log_enabled: True # default: True # If True, the log files are created in the executions_log_directory including rosbag
rosbag_log_enabled: True # default: True # If True, the rosbag files are created in the executions_log_directory
compressed_rosbag: False # default: False # If True, the rosbag files are compressed. Warning: It may increase the CPU usage and miss some messages.

executions_log_directory: "~/catkin_ws_deformable/src/deformable_manipulations_composite_layup/logs/"
## ----------------------------------------------------------------------------------------

# Maximum velocity limits for each robot
# Any velocity command exceeding these limits will be scaled down to these values
max_linear_velocity: 0.2 # 0.05 # 0.2 # 0.1 # [m/s]

# Maximum acceleration limits for each robot
max_linear_acceleration: 0.01 # 0.5  # [m/s^2]

k_low_pass_convergence: 0.9 # low pass filter coefficient for the ratio of minimum distance values of the previous values (Must be between [0,1])

## ----------------------------------------------------------------------------------------

## -------------------------------------------------------
## Obstacle avoidance parameters

k_low_pass_min_d: 0.1 # low pass filter coefficient for the ratio of minimum distance values of the previous values (Must be between [0,1])

# offset distance from the obstacles
d_obstacle_offset: 0.1 # 0.05 # (meter) # safety offset distance from the obstacles
d_obstacle_freezone: 0.5 # (meter) # further than this distance, no obstacles considered by the controller 

# alpha(h) function obstacle avoidance coefficients OLD
# see: https://www.desmos.com/calculator/hc6lc7nzkk for the function visualizations
c1_alpha_obstacle: 0.26 # GOOD 0.26 # GOOD 0.02 # 0.1 # 1.0 # 0.25 # 0.08 # Decrease this to start reacting early 
c2_alpha_obstacle: 1.0   # GOOD 1.0  # GOOD 4.0  # 2.7 # 4.0 # 1.16 # 
c3_alpha_obstacle: 1.0   # GOOD 1.0  # GOOD 0.05 # linear slope if h < 0 # Increase this to remove the offset violation more agressively

# # alpha(h) function obstacle avoidance coefficients NEW
# # see: https://www.desmos.com/calculator/eccc1oqisp for the function visualizations
# c1_alpha_obstacle: 0.1 # [0,1] # Decrease this to start reacting early 
# c2_alpha_obstacle: 1.0   # NOT USED
# c3_alpha_obstacle: 1.0   # GOOD 1.0  # linear slope if h < 0 # Increase this to remove the offset violation more agressively
## -------------------------------------------------------

## -------------------------------------------------------
## Stress avoidance parameters

k_low_pass_ft: 0.9 # low pass filter coefficient for the ratio of ft values of the previous values (Must be between [0,1])

wrench_max: [200.0, 200.0, 200.0] # maximum wrench values for each axis [Fx,Fy,Fz] for the Control Barrier Functions (CBF)s. 
# w_stress_offset: [60.0, 60.0, 60.0] # offset values for the stress violation for each axis [Fx,Fy,Fz]
w_stress_offset: [160.0, 160.0, 160.0] # offset values for the stress violation for each axis [Fx,Fy,Fz]

# alpha(h_ft) function robot stress coefficients for each axis [Fx,Fy,Fz]
# see: https://www.desmos.com/calculator/hc6lc7nzkk for the function visualizations
# c1_alpha_ft: [0.1, 0.1, 0.1] # Decrease this to start reacting early  
# c1_alpha_ft: [150, 150, 150] # Decrease this to start reacting early TOO RELAXED  
# c1_alpha_ft: [9, 9, 9] # Decrease this to start reacting early  OLD
c1_alpha_ft: [1.4, 1.4, 1.4] # Decrease this to start reacting early  NEW

c2_alpha_ft: [1.0, 1.0, 1.0] # DO NOT CHANGE FROM 1.0. EXPERIMENTAL

# c3_alpha_ft: [10.0, 10.0, 10.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively # SEEMS TOO RELAXED FOR Fx,Fy,Fz
# c3_alpha_ft: [90.0, 90.0, 90.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively OLD
c3_alpha_ft: [90.0, 90.0, 90.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively NEW
# c3_alpha_ft: [150.0, 150.0, 150.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively
# c3_alpha_ft: [200.0, 200.0, 200.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively
# c3_alpha_ft: [400.0, 400.0, 400.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively
# c3_alpha_ft: [70.0, 70.0, 70.0] # SEEMS TOO AGRESSIVE FOR Tx,Ty,Tz
## -------------------------------------------------------
